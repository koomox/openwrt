#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Build RPi 3B+ OpenWrt

on:
  push:
    branches: 
      - main
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_PACKAGE: https://github.com/kenzok8/openwrt-packages.git
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf subversion
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
      - name: Update feeds
        run: |
          cd $GITHUB_WORKSPACE/openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Network config
        run: |
          cd $GITHUB_WORKSPACE/openwrt
          #echo '修改网关地址'
          sed -i 's/192.168.1.1/192.168.0.230/g' package/base-files/files/bin/config_generate
          sed -i "113i\\\t\t\t\tset network.\$1.dns='127.0.0.1 119.29.29.29 1.1.1.1'" package/base-files/files/bin/config_generate
          sed -i "113i\\\t\t\t\tset network.\$1.gateway='192.168.0.1'" package/base-files/files/bin/config_generate
          sed -i 's/UTC/CST-8/g' package/base-files/files/bin/config_generate
          sed -i '/CST-8/a \\t\tset system\.\@system\[\-1\]\.zonename=\'Asia\/Shanghai\' package/base-files/files/bin/config_generate
      - name: Generate configuration file
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_brcm2708=y
          CONFIG_TARGET_brcm2708_bcm2710=y
          CONFIG_TARGET_brcm2708_bcm2710_DEVICE_rpi-3=y
          EOF
          # Disable SQUASHFS:
          cat >> .config <<EOF
          # CONFIG_TARGET_ROOTFS_TARGZ is not set
          # CONFIG_TARGET_ROOTFS_INITRAMFS is not set
          # CONFIG_TARGET_ROOTFS_SQUASHFS is not set
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          EOF
          # 设置固件大小:
          cat >> .config <<EOF
          CONFIG_TARGET_KERNEL_PARTSIZE=32
          CONFIG_TARGET_ROOTFS_PARTSIZE=600
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          #cat >> .config <<EOF
          #CONFIG_EFI_IMAGES=y
          #EOF
          # IPv6支持:
          #cat >> .config <<EOF
          #CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          #CONFIG_PACKAGE_ipv6helper=y
          #EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_kmod-fs-nfs=y
          #CONFIG_PACKAGE_kmod-fs-nfs-common=y
          #CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          #CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          #CONFIG_PACKAGE_kmod-fs-ntfs=y
          #CONFIG_PACKAGE_kmod-fs-squashfs=y
          CONFIG_PACKAGE_kmod-fs-vfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # Language support
          cat >> .config <<EOF
          CONFIG_LUCI_LANG_en=y
          CONFIG_LUCI_LANG_zh_Hans=y
          EOF
          # 启用dnsmasq-full 替换 dnsmasq
          cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq is not set
          CONFIG_PACKAGE_dnsmasq-full=y
          EOF
          
          # 启用 fullcone nat 
          cat >> .config <<EOF
          CONFIG_PACKAGE_iptables-mod-fullconenat=y
          CONFIG_PACKAGE_iptables-mod-tproxy=y
          EOF
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          # CONFIG_PACKAGE_luci-theme-atmaterial=y
          # CONFIG_PACKAGE_luci-theme-rosy=y
          # CONFIG_PACKAGE_luci-theme-opentomcat=y
          # CONFIG_PACKAGE_luci-theme-opentomato=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          EOF
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_openssh-keygen=y
          CONFIG_PACKAGE_openssh-moduli=y
          CONFIG_PACKAGE_openssh-client=y
          CONFIG_PACKAGE_openssh-server=y
          CONFIG_PACKAGE_openssh-sftp-client=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_openssl-util=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_kmod-ipt-tproxy=y
          EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_PAD=y
          CONFIG_VMDK_IMAGES=y
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./openwrt/bin/targets/
